<RTACModule>
  <LogicEngineObject>
    <Name>fun_ReadFromFileIntS</Name>
    <Type>Function</Type>
    <Interface><![CDATA[FUNCTION fun_ReadFromFileIntS : ARRAY[0..Length_max_low_GB-1] OF INT		// Read small size array of integers

VAR_INPUT
FileName : STRING;
Length : UINT;
END_VAR

VAR
FileReader : class_FileReader2;
FirstScan : BOOL := TRUE;
Copied : BOOL := FALSE;
InputVector : DynamicVectors.class_ByteVector;
csvManager : class_CsvManager := (LogRuntimeErrors := TRUE);
FID :STRING(255);
firstColVector : DynamicVectors.class_BaseVector(elementSize :=SIZEOF(STRING(255)), numElements := Length_max_low_GB);
secondColVector  : DynamicVectors.class_BaseVector(elementSize :=SIZEOF(STRING(255)), numElements := Length_max_low_GB); 

itr : UINT;
stage : UINT :=0;
popArray : ARRAY[0..Length_max_low_GB] OF STRING;
INTArray : ARRAY[0..Length_max_low_GB] OF INT;

complete : BOOL :=FALSE; 

temp_INTArray : ARRAY[0..Length_max_low_GB-1] OF INT;
END_VAR
]]></Interface>
    <Implementation><![CDATA[WHILE stage < 4 DO
CASE stage OF
0://Read csv file into the memory
	FileReader.ReadFile(FileName);
	stage := stage + 1;
	
1://When complete, copy data into a vector and pass the vector to the CSV manager
IF (FileReader.BytesInBuffer>0)  AND NOT FileReader.Error THEN // Initiate CSV manager readwrite mode
FileReader.AppendToVector(startByte := 0, vector := InputVector);
csvManager.InitReadWriteMode(inVector := InputVector);
stage := stage + 1;
END_IF

2: // If the csvManager is parsed extract real and imaginery parts of the complex number data to vector and perform string to Lreal conversion, then load the values to the complex matrix.
IF csvManager.CsvParsed AND csvManager.NumColumns >= 1 THEN 
IF csvManager.ExtractDataSetToVector(extractMode :=
enum_MatrixAccessMethod.e_COLUMN,
dataSetIndex := 1, targetVector := firstColVector)
THEN

FOR itr := 0 TO Length-1 DO
firstColVector.GetCopyOfElement(index := itr,
pt_destination := ADR(FID));
popArray [itr] := FID;
INTArray[itr] := STRING_TO_INT(popArray [itr]);	
temp_INTArray[itr] := INTArray[itr] ;
END_FOR
END_IF

stage := stage + 1;
complete :=TRUE;
END_IF

END_CASE

FileReader.Run(); // Run this every scan regardless.
csvManager.Run();

IF complete THEN
	EXIT;
END_IF

END_WHILE

fun_ReadFromFileINTS := temp_INTArray;]]></Implementation>
    <Metadata><![CDATA[<Single xml:space="preserve" Type="{81297157-7ec9-45ce-845e-84cab2b88ade}" Method="IArchivable">
  <Dictionary Type="{2c41fa04-1834-41c1-816e-303c7aa2c05b}" Name="Properties" />
  <Single Name="TypeGuid" Type="System.Guid">6f9dac99-8de1-4efc-8465-68ac443b7d08</Single>
</Single>]]></Metadata>
  </LogicEngineObject>
</RTACModule>